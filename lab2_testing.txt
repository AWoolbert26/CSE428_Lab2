Testing:

-Testing for different command line arguments:
    Note that I'm using IDE which displays the exit code differently that the usual terminal would do.
    1) No arguments: executing ./lab2 gives us:
        Usage: ./lab2 <GameType> <PlayerNames...>
        GameType: Pinochle <Player1> <Player2> <Player3> <Player4>
            or HoldEm <Player1> <Player2> [<Player3> ... <Player9>] 
            (Exit code 7)
        
        That's a proper usage message describing two games implemented and number of players we need to specify for each of them. 

    2) Only one argument specifying wrong type of game: ./lab2 Poker
        Unknown game type: Poker
        Usage: ./lab2 <game_name> <PlayerNames...> 
        (Exit code 10)

        Proper usage message telling that there's no such game.

    3) Wrong game name and some players specified: ./lab2 Poker Bob Alica
        Unknown game type: Poker
        Usage: ./lab2 <game_name> <PlayerNames...>
        (Exit code 10)

        The exit code is also 10 meaning wrong game type argument.

    4) Pinochle game, no players: ./lab2 Pinochle
        Wrong number of players, Pinochle requires exactly four players.
        Usage: ./lab2 Pinochle <Player1> <Player2> <Player3> <Player4>
        (Exit code 8)

        The error code is different this time and the mesage displays that the problem is in the number of players.

    5) Pinochle game, not enough players: ./lab2 Pinochle 1 2 3
        Wrong number of players, Pinochle requires exactly four players.
        Usage: ./lab2 Pinochle <Player1> <Player2> <Player3> <Player4>
        (Exit code 8)

        Again the error is the same as in 4) which is correct.

    6) Pinochle game, too many players: ./lab2 Pinochle 1 2 3 4 5
        Wrong number of players, Pinochle requires exactly four players.
        Usage: ./lab2 Pinochle <Player1> <Player2> <Player3> <Player4>
        (Exit code 8)

        Again the error is the same as in 4) which is correct.
    
    7) Pinochle game, correct number of players: ./lab2 Pinochle 1 2 3 4
        1's hand:
        KC 9S QC 9D 9H KC 10C KS 10C AC 9C KD 

        2's hand:
        AD AD QS 9D JD JH JC AC 9S 10S JS JC 
        fortyjacks 40
        pinochle 40

        3's hand:
        10H KH QS 9C QC KS QD QH AS 10S 9H AS 
        sixtyqueens 60

        4's hand:
        JH JD QD AH QH 10D KD AH KH 10D JS 10H 


        Do you want to end the game? (yes or no): 

        The game started successfully which is a correct behavior. 

    8) Pinochle game, correct number of players but two of gthem have the same name: ./lab2 Pinochle 1 1 3 4
        1's hand:
        QD 9H QH 10C AC QC AH 9S QC KH KC JD 

        1's hand:
        KH QS QS 10D 10S 9H 9C 10H AS 10D 10C KD 

        3's hand:
        9C JH 10H QD KD JS AC KS 9D JD JC JS 
        fortyjacks 40

        4's hand:
        AS 10S JH KS 9S KC AH QH AD JC 9D AD 

        BUG! The game cannot doesn't really make sense when some players have absolutely the same names.
        I added an additional check for that into both Pinochle and HoldEm games.
        Implementation strategy: usually to check if an array has two equal elements we would sort it or use set/map, but here since the number of players is at most 9 a regular nested for range loop will be really fast and will avoid unnecessary library #includes
        Also we implement this check on the initialization stages for both games instead of implementing it for the whole Game class, because, in theory, some games might allow having players with the same name (for example a game might have 2 players but they play in some specific order which is specified in this way).

        Let's test again: ./lab2 Pinochle 1 1 3 4
        In Pinochle, players can't have the same names.
        All player names should be unique.

        (Exit code 13)

        Now the output is correct.

    9) Since we added additional check for players let's see again if the game start correctly if all names are unique: ./lab2 Pinochle 1 2 3 4
        1's hand:
        QC KD QH JD 9D 10C JS JC KH 10D 10H 10C 

        2's hand:
        9C 9S QS 9D AH 10H QC 9H AC JC AH QD 

        3's hand:
        9H JS AC 9S JH KC KD KH 9C AS AS 10S 

        4's hand:
        JD 10D KS KC JH QH AD KS QS QD AD 10S 
        pinochle 40


        Do you want to end the game? (yes or no): 

        The game started correctly.

    10) HoldEm game, no players provided: ./lab2 HoldEm
        Wrong number of players, HoldEm requires from 2 to 9 players.
        Usage: ./lab2 HoldEm <Player1> <Player2> [<Player3> ... <Player9>]
        (Exit code 9)

        The message is correct and the exit code is different from when Pinochle game didn't have the right amount of players. 
        This is a correct behavior because HoldEm is a separate game which has different exectuion rules, so it should have a unique command line error code.

    11) HoldEm game, not enought players provided: ./lab2 HoldEm Bob
        Wrong number of players, HoldEm requires from 2 to 9 players.
        Usage: ./lab2 HoldEm <Player1> <Player2> [<Player3> ... <Player9>]
        (Exit code 9)

        We got the same error which is correct.

    12) HoldEm game, too many players provided: ./lab2 HoldEm Bob1 Bob2 Bob3 Bob4 Bob5 Bob6 Bob7 Bob8 Bob9 Alex
        Wrong number of players, HoldEm requires from 2 to 9 players.
        Usage: ./lab2 HoldEm <Player1> <Player2> [<Player3> ... <Player9>]
        (Exit code 9)

        Again that's a correct behavior since we provided a wrong number of players.

    13) HoldEm game, nine players provided, which is correct: ./lab2 HoldEm Bob1 Bob2 Bob3 Bob4 Bob5 Bob6 Bob7 Bob8 Bob9
        Bob1's hand:
        QS 5H 
        Bob2's hand:
        AS 8C 
        Bob3's hand:
        4H 9H 
        Bob4's hand:
        6S KH 
        Bob5's hand:
        2C 10S 
        Bob6's hand:
        10C AC 
        Bob7's hand:
        JH 5C 
        Bob8's hand:
        AH 6C 
        Bob9's hand:
        KD 8D 
        BOARD (flop): 
        10D 2H JC 
        Bob5 2C 10S JC 2H 10D 
        twopair
        Bob7 JH 5C JC 2H 10D 
        pair
        Bob6 10C AC JC 2H 10D 
        pair
        Bob2 AS 8C JC 2H 10D 
        xhigh
        Bob8 AH 6C JC 2H 10D 
        xhigh
        Bob9 KD 8D JC 2H 10D 
        xhigh
        Bob4 6S KH JC 2H 10D 
        xhigh
        Bob1 QS 5H JC 2H 10D 
        xhigh
        Bob3 4H 9H JC 2H 10D 
        xhigh
        BOARD (turn): 
        10D 2H JC 7H 
        BOARD (river): 
        10D 2H JC 7H 3S 

        Do you want to end the game? (yes or no):

        The game started successfully which is totally right!

    14) HoldEm game, only two players provided, which is also correct: ./lab2 HoldEm Bob1 Bob2
        Bob1's hand:
        JC 9S 
        Bob2's hand:
        2H QD 
        BOARD (flop): 
        5D AC 8H 
        Bob2 2H QD 8H AC 5D 
        xhigh
        Bob1 JC 9S 8H AC 5D 
        xhigh
        BOARD (turn): 
        5D AC 8H QS 
        BOARD (river): 
        5D AC 8H QS JH 

        Do you want to end the game? (yes or no): 

        Again the game started successfully, which is right.

    15) HoldEm game, a correct number of players is provided but they two of them are have the same name: ./lab2 HoldEm Bob 1 2 Bob
        In HoldEm, players can't have the same names.
        All player names should be unique.

        (Exit code 13)

        The error is treated correctly.

    No we move on a second stage of testing, we will check that appropriate suit independent melds are identified for each hand in the Pinochle game.

    16) We will run the Pinochle game and play a few rounds to see if our program correctly detects melds: ./lab2 Pinochle 1 2 3 4
        1's hand:
        QH JD JS KC 10D KS JS AH 10S 9S JH 10H 

        2's hand:
        AD QD QD QC JC QH 9D KD JH 10C 10S 10C 

        3's hand:
        AH KH 9C AC 10H JD KD 10D KH 9D AS AD 
        hundredaces 100

        4's hand:
        9S 9H JC AC QC AS 9H QS QS KC 9C KS 

        Do you want to end the game? (yes or no): 

        Here in hand 3 hundredaces was detected which is a combination of aces of all suits. There are in fact all four suits in 3's hand, AH, AC, AS and AD.
        The number of points is 100 which is right since "hundredaces is worth 100 points" from the lab manual.
        By manually checking I cannot see any other melds in these four hands.

        We run next round by answering "no" to the question if we want to quit the game.

        1's hand:
        10H KH JC AH 9H QS KH 9S AS 9C 10D KD 

        2's hand:
        9D KD QD QC JS KS QD 9D AD JH QC 10S 

        3's hand:
        QS AH 10H 9H KC KC 10C JD AD QH QH 10D 
        pinochle 40

        4's hand:
        JS 10C JD 10S AS 9S JC JH AC KS 9C AC 
        fortyjacks 40


        Do you want to end the game? (yes or no): 

        Here a pinochle was found in 3's which stands for a jack of diamonds and a queen of spades. In fact 3's hand has QS and JD.
        Pinochle is worse 40 which is right according to the lab manual, saying "pinochle is worth 40 points"

        4's hand has a fortyjacks which stands for having a jack of each suit. In fact 4's hand has JS, JD, JC and JH.
        It displays that a fortyjack is worse 40 which is right: "fortyjacks is worth 40 points".

        I cannot see any other melds in here, which agrees with out output.

        Next round:
        1's hand:
        10S 10C KH QD 9D QH 10H JD KD JH KC 9S 

        2's hand:
        9D QH KC AC 10S 9H AC QD 10D JH 9H 9C 

        3's hand:
        QC 9C AD KD KS JS AD 10C QC JS AS JC 

        4's hand:
        JC 10H AS KH QS AH 10D 9S AH JD KS QS 
        pinochle 40

        Here pinochle is found is 4's hand. That's right as 4's hand has JD and QS.
        Again 40 is the right number of points for a pinochle.
        I don't see any other melds, which agrees with the output.

        For now let's finish this game and try playing a new game to seek for some other melds.

    17) Again we run Pinochle game but now I will skip some rounds in which no new melds arise from those which we already found: ./lab2 Pinochle 1 2 3 4
        After a few rounds I got:

        1's hand:
        9C 10S QS 10H KD AC QH QH QD 10S 9H AS 

        2's hand:
        9C QS JH JS JC AD AC AS AH JS 9D 10H 
        hundredaces 100

        3's hand:
        KH 9S JH KC 10D 10D AH 9H 9S 10C QC JD 

        4's hand:
        KC KS KH KS QC 9D KD AD JC 10C JD QD 
        eightykings 80

        We can see a new meld - 4's hand has eightykings which stands for having a king of each suit.
        4's hand in fact has KC, KS, KH and KS, so the meld was found correctly.
        The output shows that eightykings is worse 80, which is correct by lab manual, "eightykings is worth 80 points"

        Here 2's has hundredaces which is a combination of all 4 aces of all suits. Even though we found it before let's just double check.
        2's hand in fact has AD, AC, AS and AH.
        Also the number of points for this meld is 100 which is right.

    18) Let's move to the next stage and now test Hold'Em.
        We will play a few rounds and check if the card combinations are produced and ranked correctly: ./lab2 HoldEm 1 2

        1's hand:
        6S 3H 
        2's hand:
        KD JC 
        BOARD (flop): 
        2H 5S 2C 
        2 KD JC 2C 5S 2H 
        pair
        1 6S 3H 2C 5S 2H 
        pair
        BOARD (turn): 
        2H 5S 2C QD 
        BOARD (river): 
        2H 5S 2C QD 4H 







